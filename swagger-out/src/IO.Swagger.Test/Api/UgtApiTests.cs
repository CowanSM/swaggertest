/* 
 * Test API Specification
 *
 * This is a test api for our upcoming project.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nobodyshome@random.games
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing UgtApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UgtApiTests
    {
        private UgtApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UgtApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UgtApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UgtApi
            //Assert.IsInstanceOfType(typeof(UgtApi), instance, "instance is a UgtApi");
        }

        /// <summary>
        /// Test DevelopersDeveloperKeyAppKeyUgtGet
        /// </summary>
        [Test]
        public void DevelopersDeveloperKeyAppKeyUgtGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string developerKey = null;
            //string appKey = null;
            //List<string> uuids = null;
            //var response = instance.DevelopersDeveloperKeyAppKeyUgtGet(developerKey, appKey, uuids);
            //Assert.IsInstanceOf<Portal> (response, "response is Portal");
        }
        /// <summary>
        /// Test DevelopersDeveloperKeyAppKeyUuidUgtGet
        /// </summary>
        [Test]
        public void DevelopersDeveloperKeyAppKeyUuidUgtGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //string developerKey = null;
            //string appKey = null;
            //var response = instance.DevelopersDeveloperKeyAppKeyUuidUgtGet(uuid, developerKey, appKey);
            //Assert.IsInstanceOf<InlineResponse2001> (response, "response is InlineResponse2001");
        }
        /// <summary>
        /// Test DevelopersDeveloperKeyAppKeyUuidUgtPost
        /// </summary>
        [Test]
        public void DevelopersDeveloperKeyAppKeyUuidUgtPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UuidUgtBody body = null;
            //string uuid = null;
            //string developerKey = null;
            //string appKey = null;
            //var response = instance.DevelopersDeveloperKeyAppKeyUuidUgtPost(body, uuid, developerKey, appKey);
            //Assert.IsInstanceOf<ModelApiResponse> (response, "response is ModelApiResponse");
        }
        /// <summary>
        /// Test UserUuidUgtGet
        /// </summary>
        [Test]
        public void UserUuidUgtGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //var response = instance.UserUuidUgtGet(uuid);
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
    }

}
